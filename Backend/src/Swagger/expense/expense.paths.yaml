/api/v1/expenses/all:
  get:
    summary: Retrieve all expenses (admin only)
    description: Returns a list of all expenses in the system. Requires admin privileges.
    tags:
      - Expenses
    security:
      - bearerAuth: []
    responses:
      200:
        description: Successfully retrieved all expenses
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/SuccessResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/ExpenseResponsePayload"
        
      401:
        description: Unauthorized
      500:
        description: Server error

/api/v1/expenses:
  get:
    summary: Retrieve expenses for the authenticated user
    description: Returns a list of expenses belonging to the authenticated user.
    tags:
      - Expenses
    security:
      - bearerAuth: []
    responses:
      200:
        description: Successfully retrieved user expenses
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/SuccessResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/ExpenseResponsePayload"
                        
      401:
        description: Unauthorized
      500:
        description: Server error

  post:
    summary: Create a new expense
    description: Users can create their own expenses.
    tags:
      - Expenses
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExpenseRequestBody"
    responses:
      201:
        description: Successfully created an expense
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/SuccessResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/ExpenseResponsePayload"
      400:
        description: Invalid input
      401:
        description: Unauthorized
      500:
        description: Server error

/api/v1/expenses/{id}:
  get:
    summary: Retrieve an expense by ID
    tags:
      - Expenses
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Expense ID
    responses:
      200:
        description: Successfully retrieved expense
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/SuccessResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/ExpenseResponsePayload"
      404:
        description: Expense not found
      401:
        description: Unauthorized
      500:
        description: Server error

  put:
    summary: Update an expense by ID
    tags:
      - Expenses
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Expense ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExpenseRequestBody"
    responses:
      200:
        description: Successfully updated expense
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/SuccessResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/ExpenseResponsePayload"
      400:
        description: Invalid input
      404:
        description: Expense not found
      401:
        description: Unauthorized
      500:
        description: Server error

  delete:
    summary: Delete an expense by ID
    tags:
      - Expenses
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Expense ID
    responses:
      204:
        description: Successfully deleted expense
      404:
        description: Expense not found
      401:
        description: Unauthorized
      500:
        description: Server error
